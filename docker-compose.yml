version: '3.8'

services:
  # Next.js Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/booksflow_dev
    env_file:
      - .env.local
    depends_on:
      - postgres
      - redis
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - /app/node_modules
    restart: unless-stopped
    networks:
      - booksflow-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: booksflow_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - booksflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - booksflow-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5

  # FastAPI Backend (placeholder - will be implemented separately)
  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - DATABASE_URL=postgresql://postgres:password@postgres:5432/booksflow_dev
  #     - REDIS_URL=redis://redis:6379
  #   depends_on:
  #     - postgres
  #     - redis
  #   networks:
  #     - booksflow-network

volumes:
  postgres_data:
  redis_data:

networks:
  booksflow-network:
    driver: bridge