'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/Button'\nimport { StatusBadge } from '@/components/ui/StatusBadge'\nimport { AuditTrailViewer } from './AuditTrailViewer'\nimport { ComplianceReports } from './ComplianceReports'\nimport { ValidationResults } from './ValidationResults'\nimport { BackupStatus } from './BackupStatus'\nimport { logger } from '@/lib/logger'\n\ninterface ComplianceStatus {\n  overall_status: 'compliant' | 'warning' | 'non_compliant'\n  last_updated: string\n  audit_trail: {\n    total_entries: number\n    integrity_score: number\n    recent_high_risk: number\n    pending_approvals: number\n  }\n  validations: {\n    total_checks: number\n    passed: number\n    failed: number\n    critical_failures: number\n  }\n  backups: {\n    last_backup: string\n    success_rate: number\n    next_scheduled: string\n  }\n  regulatory_reports: {\n    pending: number\n    overdue: number\n    completed_this_month: number\n  }\n}\n\ninterface ComplianceDashboardProps {\n  userRole: 'client' | 'accountant' | 'admin'\n  userId: string\n  className?: string\n}\n\nexport function ComplianceDashboard({\n  userRole,\n  userId,\n  className\n}: ComplianceDashboardProps) {\n  const [complianceStatus, setComplianceStatus] = useState<ComplianceStatus | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [activeTab, setActiveTab] = useState<'overview' | 'audit-trail' | 'validations' | 'reports' | 'backups'>('overview')\n  const [refreshing, setRefreshing] = useState(false)\n\n  useEffect(() => {\n    loadComplianceStatus()\n    \n    // Set up periodic refresh for compliance monitoring\n    const interval = setInterval(loadComplianceStatus, 60000) // Refresh every minute\n    \n    return () => clearInterval(interval)\n  }, [userId])\n\n  const loadComplianceStatus = async () => {\n    try {\n      setError(null)\n      \n      const response = await fetch(`/api/compliance/status?userId=${userId}&userRole=${userRole}`)\n      \n      if (!response.ok) {\n        throw new Error(`Failed to load compliance status: ${response.status}`)\n      }\n      \n      const data = await response.json()\n      setComplianceStatus(data)\n      \n    } catch (error) {\n      logger.error('Error loading compliance status', error as Error)\n      setError('Failed to load compliance status. Please try again.')\n    } finally {\n      setLoading(false)\n      setRefreshing(false)\n    }\n  }\n\n  const handleRefresh = async () => {\n    setRefreshing(true)\n    await loadComplianceStatus()\n  }\n\n  const handleRunValidation = async (validationType: string) => {\n    try {\n      const response = await fetch('/api/compliance/validate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          validation_type: validationType,\n          user_id: userId\n        })\n      })\n      \n      if (response.ok) {\n        await loadComplianceStatus() // Refresh status after validation\n      }\n    } catch (error) {\n      logger.error('Error running validation', error as Error)\n    }\n  }\n\n  const getOverallStatusColor = (status: string) => {\n    switch (status) {\n      case 'compliant': return 'text-green-600'\n      case 'warning': return 'text-yellow-600'\n      case 'non_compliant': return 'text-red-600'\n      default: return 'text-gray-600'\n    }\n  }\n\n  const getOverallStatusIcon = (status: string) => {\n    switch (status) {\n      case 'compliant': return '‚úÖ'\n      case 'warning': return '‚ö†Ô∏è'\n      case 'non_compliant': return '‚ùå'\n      default: return '‚ùì'\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className={`bg-white rounded-lg shadow ${className}`}>\n        <div className=\"p-8 text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading compliance dashboard...</p>\n        </div>\n      </div>\n    )\n  }\n\n  if (error || !complianceStatus) {\n    return (\n      <div className={`bg-white rounded-lg shadow ${className}`}>\n        <div className=\"p-8 text-center\">\n          <div className=\"text-red-500 mb-4\">\n            <svg className=\"w-16 h-16 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n          </div>\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Unable to Load Compliance Status</h2>\n          <p className=\"text-gray-600 mb-4\">{error}</p>\n          <Button onClick={loadComplianceStatus} variant=\"primary\">\n            Try Again\n          </Button>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Header */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">\n              Compliance & Audit Dashboard\n            </h1>\n            <p className=\"text-gray-600 mt-1\">\n              Real-time compliance monitoring and audit trail management\n            </p>\n          </div>\n          \n          <div className=\"mt-4 sm:mt-0 flex items-center space-x-3\">\n            {/* Overall Status */}\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-2xl\">\n                {getOverallStatusIcon(complianceStatus.overall_status)}\n              </span>\n              <div>\n                <p className=\"text-sm text-gray-500\">Overall Status</p>\n                <p className={`font-semibold capitalize ${\n                  getOverallStatusColor(complianceStatus.overall_status)\n                }`}>\n                  {complianceStatus.overall_status.replace('_', ' ')}\n                </p>\n              </div>\n            </div>\n            \n            {/* Actions */}\n            <Button\n              onClick={handleRefresh}\n              variant=\"ghost\"\n              size=\"sm\"\n              disabled={refreshing}\n              className=\"text-gray-500 hover:text-gray-700\"\n            >\n              {refreshing ? (\n                <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-gray-300 border-t-gray-600\" />\n              ) : (\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                </svg>\n              )}\n            </Button>\n            \n            {userRole === 'admin' && (\n              <Button\n                onClick={() => handleRunValidation('comprehensive')}\n                variant=\"outline\"\n                size=\"sm\"\n              >\n                Run Validation\n              </Button>\n            )}\n          </div>\n        </div>\n        \n        {/* Navigation Tabs */}\n        <div className=\"mt-6 border-b border-gray-200\">\n          <nav className=\"flex space-x-8\">\n            {[\n              { id: 'overview', label: 'Overview', icon: 'üìä' },\n              { id: 'audit-trail', label: 'Audit Trail', icon: 'üìã' },\n              { id: 'validations', label: 'Validations', icon: '‚úÖ' },\n              { id: 'reports', label: 'Reports', icon: 'üìÑ' },\n              { id: 'backups', label: 'Backups', icon: 'üíæ' }\n            ].map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id as any)}\n                className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\n                  activeTab === tab.id\n                    ? 'border-primary-500 text-primary-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                <span>{tab.icon}</span>\n                <span>{tab.label}</span>\n              </button>\n            ))}\n          </nav>\n        </div>\n      </div>\n\n      {/* Tab Content */}\n      {activeTab === 'overview' && (\n        <div className=\"space-y-6\">\n          {/* Status Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {/* Audit Trail Status */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-medium text-gray-900\">Audit Trail</h3>\n                <div className=\"text-2xl\">üìã</div>\n              </div>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Total Entries</span>\n                  <span className=\"font-semibold\">{complianceStatus.audit_trail.total_entries.toLocaleString()}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Integrity Score</span>\n                  <span className={`font-semibold ${\n                    complianceStatus.audit_trail.integrity_score >= 99 ? 'text-green-600' :\n                    complianceStatus.audit_trail.integrity_score >= 95 ? 'text-yellow-600' : 'text-red-600'\n                  }`}>\n                    {complianceStatus.audit_trail.integrity_score.toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">High Risk Events</span>\n                  <span className={`font-semibold ${\n                    complianceStatus.audit_trail.recent_high_risk > 0 ? 'text-red-600' : 'text-green-600'\n                  }`}>\n                    {complianceStatus.audit_trail.recent_high_risk}\n                  </span>\n                </div>\n                {complianceStatus.audit_trail.pending_approvals > 0 && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-gray-600\">Pending Approvals</span>\n                    <StatusBadge status=\"warning\" size=\"sm\">\n                      {complianceStatus.audit_trail.pending_approvals}\n                    </StatusBadge>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Validation Status */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-medium text-gray-900\">Validations</h3>\n                <div className=\"text-2xl\">‚úÖ</div>\n              </div>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Total Checks</span>\n                  <span className=\"font-semibold\">{complianceStatus.validations.total_checks}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Passed</span>\n                  <span className=\"font-semibold text-green-600\">{complianceStatus.validations.passed}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Failed</span>\n                  <span className={`font-semibold ${\n                    complianceStatus.validations.failed > 0 ? 'text-red-600' : 'text-green-600'\n                  }`}>\n                    {complianceStatus.validations.failed}\n                  </span>\n                </div>\n                {complianceStatus.validations.critical_failures > 0 && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-gray-600\">Critical Failures</span>\n                    <StatusBadge status=\"error\" size=\"sm\">\n                      {complianceStatus.validations.critical_failures}\n                    </StatusBadge>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Backup Status */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-medium text-gray-900\">Backups</h3>\n                <div className=\"text-2xl\">üíæ</div>\n              </div>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Last Backup</span>\n                  <span className=\"font-semibold text-xs\">\n                    {new Date(complianceStatus.backups.last_backup).toLocaleDateString()}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Success Rate</span>\n                  <span className={`font-semibold ${\n                    complianceStatus.backups.success_rate >= 99 ? 'text-green-600' :\n                    complianceStatus.backups.success_rate >= 95 ? 'text-yellow-600' : 'text-red-600'\n                  }`}>\n                    {complianceStatus.backups.success_rate.toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Next Scheduled</span>\n                  <span className=\"font-semibold text-xs\">\n                    {new Date(complianceStatus.backups.next_scheduled).toLocaleDateString()}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {/* Regulatory Reports */}\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-lg font-medium text-gray-900\">Reports</h3>\n                <div className=\"text-2xl\">üìÑ</div>\n              </div>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Completed</span>\n                  <span className=\"font-semibold text-green-600\">\n                    {complianceStatus.regulatory_reports.completed_this_month}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Pending</span>\n                  <span className={`font-semibold ${\n                    complianceStatus.regulatory_reports.pending > 0 ? 'text-yellow-600' : 'text-green-600'\n                  }`}>\n                    {complianceStatus.regulatory_reports.pending}\n                  </span>\n                </div>\n                {complianceStatus.regulatory_reports.overdue > 0 && (\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-gray-600\">Overdue</span>\n                    <StatusBadge status=\"error\" size=\"sm\">\n                      {complianceStatus.regulatory_reports.overdue}\n                    </StatusBadge>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Recent Activity */}\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Recent Compliance Activity</h3>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between p-3 bg-green-50 rounded-lg\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"text-green-600\">‚úÖ</div>\n                  <div>\n                    <p className=\"font-medium text-gray-900\">Daily backup completed successfully</p>\n                    <p className=\"text-sm text-gray-600\">2 hours ago</p>\n                  </div>\n                </div>\n                <StatusBadge status=\"approved\" size=\"sm\" />\n              </div>\n              \n              <div className=\"flex items-center justify-between p-3 bg-blue-50 rounded-lg\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"text-blue-600\">üìã</div>\n                  <div>\n                    <p className=\"font-medium text-gray-900\">Audit trail integrity verification passed</p>\n                    <p className=\"text-sm text-gray-600\">4 hours ago</p>\n                  </div>\n                </div>\n                <StatusBadge status=\"approved\" size=\"sm\" />\n              </div>\n              \n              <div className=\"flex items-center justify-between p-3 bg-yellow-50 rounded-lg\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"text-yellow-600\">‚ö†Ô∏è</div>\n                  <div>\n                    <p className=\"font-medium text-gray-900\">High-risk transaction detected</p>\n                    <p className=\"text-sm text-gray-600\">6 hours ago</p>\n                  </div>\n                </div>\n                <StatusBadge status=\"warning\" size=\"sm\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {activeTab === 'audit-trail' && (\n        <AuditTrailViewer \n          userId={userId}\n          userRole={userRole}\n        />\n      )}\n      \n      {activeTab === 'validations' && (\n        <ValidationResults \n          userId={userId}\n          userRole={userRole}\n          onRunValidation={handleRunValidation}\n        />\n      )}\n      \n      {activeTab === 'reports' && (\n        <ComplianceReports \n          userId={userId}\n          userRole={userRole}\n        />\n      )}\n      \n      {activeTab === 'backups' && (\n        <BackupStatus \n          userId={userId}\n          userRole={userRole}\n        />\n      )}\n    </div>\n  )\n}\n"