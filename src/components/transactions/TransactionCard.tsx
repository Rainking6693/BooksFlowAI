'use client'\n\nimport { useState } from 'react'\nimport { Button } from '@/components/ui/Button'\nimport { formatCurrency, formatDate } from '@/lib/utils'\n\ninterface Transaction {\n  id: string\n  description: string\n  amount: number\n  vendor_name?: string\n  transaction_date: string\n  account_name?: string\n  ai_suggested_category_id?: string\n  ai_confidence?: 'high' | 'medium' | 'low'\n  ai_reasoning?: string\n  status: 'pending' | 'approved' | 'rejected'\n  category?: {\n    id: string\n    name: string\n  }\n}\n\ninterface TransactionCardProps {\n  transaction: Transaction\n  selected: boolean\n  onSelect: (selected: boolean) => void\n  onApprove: () => void\n  onReject: () => void\n  disabled?: boolean\n}\n\nexport function TransactionCard({\n  transaction,\n  selected,\n  onSelect,\n  onApprove,\n  onReject,\n  disabled = false\n}: TransactionCardProps) {\n  const [showDetails, setShowDetails] = useState(false)\n\n  const getConfidenceColor = (confidence?: string) => {\n    switch (confidence) {\n      case 'high':\n        return 'bg-success-100 text-success-800'\n      case 'medium':\n        return 'bg-warning-100 text-warning-800'\n      case 'low':\n        return 'bg-error-100 text-error-800'\n      default:\n        return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'approved':\n        return 'bg-success-100 text-success-800'\n      case 'rejected':\n        return 'bg-error-100 text-error-800'\n      case 'pending':\n        return 'bg-warning-100 text-warning-800'\n      default:\n        return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const getConfidenceIcon = (confidence?: string) => {\n    switch (confidence) {\n      case 'high':\n        return (\n          <svg className=\"w-4 h-4 text-success-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n          </svg>\n        )\n      case 'medium':\n        return (\n          <svg className=\"w-4 h-4 text-warning-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n          </svg>\n        )\n      case 'low':\n        return (\n          <svg className=\"w-4 h-4 text-error-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n          </svg>\n        )\n      default:\n        return null\n    }\n  }\n\n  return (\n    <div className={`p-4 hover:bg-gray-50 transition-colors ${\n      selected ? 'bg-primary-50 border-l-4 border-primary-500' : ''\n    }`}>\n      <div className=\"flex items-start space-x-4\">\n        {/* Selection Checkbox */}\n        {transaction.status === 'pending' && (\n          <div className=\"flex items-center pt-1\">\n            <input\n              type=\"checkbox\"\n              checked={selected}\n              onChange={(e) => onSelect(e.target.checked)}\n              disabled={disabled}\n              className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n            />\n          </div>\n        )}\n\n        {/* Transaction Details */}\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2 mb-1\">\n                <h4 className=\"text-lg font-semibold text-gray-900 truncate\">\n                  {transaction.vendor_name || 'Unknown Vendor'}\n                </h4>\n                <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                  getStatusColor(transaction.status)\n                }`}>\n                  {transaction.status.charAt(0).toUpperCase() + transaction.status.slice(1)}\n                </span>\n              </div>\n              \n              <p className=\"text-sm text-gray-600 mb-2\">\n                {transaction.description}\n              </p>\n              \n              <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\n                <span>{formatDate(transaction.transaction_date)}</span>\n                {transaction.account_name && (\n                  <span>â€¢ {transaction.account_name}</span>\n                )}\n              </div>\n            </div>\n            \n            <div className=\"text-right ml-4\">\n              <div className=\"text-lg font-bold text-gray-900\">\n                {formatCurrency(transaction.amount)}\n              </div>\n            </div>\n          </div>\n\n          {/* AI Categorization */}\n          {transaction.ai_confidence && transaction.category && (\n            <div className=\"mt-3 p-3 bg-gray-50 rounded-lg\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <div className=\"flex items-center space-x-2\">\n                  {getConfidenceIcon(transaction.ai_confidence)}\n                  <span className=\"text-sm font-medium text-gray-700\">\n                    AI Suggestion:\n                  </span>\n                  <span className=\"text-sm font-semibold text-gray-900\">\n                    {transaction.category.name}\n                  </span>\n                </div>\n                \n                <span className={`inline-flex items-center px-2 py-1 rounded text-xs font-medium ${\n                  getConfidenceColor(transaction.ai_confidence)\n                }`}>\n                  {transaction.ai_confidence} confidence\n                </span>\n              </div>\n              \n              {transaction.ai_reasoning && (\n                <div className=\"text-xs text-gray-600\">\n                  <strong>Reasoning:</strong> {transaction.ai_reasoning}\n                </div>\n              )}\n              \n              <button\n                onClick={() => setShowDetails(!showDetails)}\n                className=\"text-xs text-primary-600 hover:text-primary-700 mt-1\"\n              >\n                {showDetails ? 'Hide details' : 'Show details'}\n              </button>\n            </div>\n          )}\n\n          {/* Detailed Information */}\n          {showDetails && (\n            <div className=\"mt-3 p-3 bg-blue-50 rounded-lg text-sm\">\n              <div className=\"grid grid-cols-2 gap-2\">\n                <div>\n                  <span className=\"font-medium text-gray-700\">Transaction ID:</span>\n                  <div className=\"text-gray-600 font-mono text-xs\">{transaction.id}</div>\n                </div>\n                {transaction.ai_suggested_category_id && (\n                  <div>\n                    <span className=\"font-medium text-gray-700\">Category ID:</span>\n                    <div className=\"text-gray-600 font-mono text-xs\">{transaction.ai_suggested_category_id}</div>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Action Buttons */}\n        {transaction.status === 'pending' && (\n          <div className=\"flex flex-col space-y-2\">\n            <Button\n              onClick={onApprove}\n              variant=\"primary\"\n              size=\"sm\"\n              disabled={disabled}\n              className=\"min-w-[80px]\"\n            >\n              <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n              </svg>\n              Approve\n            </Button>\n            \n            <Button\n              onClick={onReject}\n              variant=\"danger\"\n              size=\"sm\"\n              disabled={disabled}\n              className=\"min-w-[80px]\"\n            >\n              <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n              Reject\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n"